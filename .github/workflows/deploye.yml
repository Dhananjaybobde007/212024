name: Deploy JAR to AWS Instance

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Clean deployment directory on AWS Instance
      env:
        AWS_INSTANCE_IP: ${{ secrets.AWS_INSTANCE_IP }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        echo "${SSH_KEY}" > ssh_key.pem
        chmod 600 ssh_key.pem
        ssh -o StrictHostKeyChecking=no -i ssh_key.pem ${SSH_USERNAME}@${AWS_INSTANCE_IP} 'sudo rm -rf /home/ubuntu/212024/*'

    - name: Transfer JARs to AWS Instance
      env:
        AWS_INSTANCE_IP: ${{ secrets.AWS_INSTANCE_IP }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        echo "${SSH_KEY}" > ssh_key.pem
        chmod 600 ssh_key.pem
        scp -o StrictHostKeyChecking=no -i ssh_key.pem $(find . -name '*.jar') ${SSH_USERNAME}@${AWS_INSTANCE_IP}:/home/ubuntu/212024/

    - name: Restart Service on AWS Instance
      env:
        AWS_INSTANCE_IP: ${{ secrets.AWS_INSTANCE_IP }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        echo "${SSH_KEY}" > ssh_key.pem
        chmod 600 ssh_key.pem
        ssh -o StrictHostKeyChecking=no -i ssh_key.pem ${SSH_USERNAME}@${AWS_INSTANCE_IP} << 'EOF'
        sudo fuser -k 8080/tcp
        # Find the most recently modified JAR file in the directory
        latest_jar=$(ls -t /home/ubuntu/212024/*.jar | head -n 1)
        nohup java -jar $latest_jar > /dev/null 2>&1 &
        EOF
